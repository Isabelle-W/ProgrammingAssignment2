help
clear
q()
getwd()
m1 <- matrix(1:6, nrow=2, ncol=3)
m
m1
m2<-solve(m1)
m1 <- matrix(1:9, nrow=3, ncol=3)
m1
m2<-solve(m1)
m1 <- matrix(1:4, nrow=2, ncol=2)
m2<-solve(m1)
m2
m1 * m2
m1 <- matrix(c(4,2,7,6), nrow=2, ncol=2)
m1
m2<-solve(m1)
m2
m1 *m2
m1 %*% m2
setwd("~/datasciencecoursera/ProgrammingAssignment2")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
v1 <- c(1:10)
v1c <- makeVector(v1)
v1
v1c
cachemean(v1c)
cachemean(v1c)
v2 <- c(3,4,5)
v2c <- makeVector(v2)
v1c
v2c
cachemean(v2c)   # calculates the mean and stores it in E2
cachemean(v2c)   # uses the mean stored in E2
cachemean(v1c)   # uses the mean stored in E1
v2c
source ("cachematrix.R")
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get
x$get()
inv <- cacheSolve(x)
inv
inv <- cacheSolve(x)
inv
x$getinverse()
m <- matrix(c(4, 2, 7, 6), 2,2)
x <- makeCacheMatrix(m)
x$get()
inv <- cacheSolve(x)
inv
x$getinverse()
inv <- cacheSolve(x)
